{"version":3,"sources":["App.jsx","reportWebVitals.js","index.jsx"],"names":["App","console","log","useState","placementMode","setPlacementMode","placementCameraOffset","color","position","intensity","id","onClick","currentPlacementMode","onKeyDown","role","tabIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LA4CeA,MArCf,WACEC,QAAQC,IAAI,OADC,MAE6BC,oBAAS,GAFtC,mBAENC,EAFM,KAESC,EAFT,KAGb,OACE,qCACE,eAAC,eAAD,WACE,cAAC,eAAD,IACA,cAAC,iBAAD,CACED,cAAeA,EACfE,sBAAuB,CAAC,EAAG,GAAI,GAFjC,SAIE,iCACE,yCACA,sCAAsBC,MAAM,iBAGhC,kCAAkBC,SAAU,CAAC,IAAK,EAAG,GAAIC,UAAW,SAEtD,sBACEC,GAAG,sBACHC,QAAS,SAACC,GACRP,GAAkBO,IAEpBC,UAAW,SAACD,GACVP,GAAkBO,IAEpBE,KAAK,SACLC,SAAU,EATZ,wBAYGX,EAAgB,UAAY,YAZ/B,oBCXSY,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,yCAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fafc4091.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ZapparCamera,\n  InstantTracker,\n  ZapparCanvas\n} from \"@zappar/zappar-react-three-fiber\";\n\nfunction App() {\n  console.log(\"App\");\n  const [placementMode, setPlacementMode] = useState(true);\n  return (\n    <>\n      <ZapparCanvas>\n        <ZapparCamera />\n        <InstantTracker\n          placementMode={placementMode}\n          placementCameraOffset={[0, 0, -5]}\n        >\n          <mesh>\n            <sphereBufferGeometry />\n            <meshStandardMaterial color=\"hotpink\" />\n          </mesh>\n        </InstantTracker>\n        <directionalLight position={[2.5, 8, 5]} intensity={1.5} />\n      </ZapparCanvas>\n      <div\n        id=\"zappar-placement-ui\"\n        onClick={(currentPlacementMode) => {\n          setPlacementMode(!currentPlacementMode);\n        }}\n        onKeyDown={(currentPlacementMode) => {\n          setPlacementMode(!currentPlacementMode);\n        }}\n        role=\"button\"\n        tabIndex={0}\n      >\n        Tap here to\n        {placementMode ? \" place \" : \" pick up \"}\n        the object\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}